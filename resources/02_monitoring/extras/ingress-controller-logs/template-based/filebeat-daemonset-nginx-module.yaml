# Example of Filebeat manifest to deliver logs from ES clusters of a namespace using hints based autodiscover.
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: logs-ingress-controller
  namespace: monitoring
spec:
  type: filebeat
  version: 7.11.2
  elasticsearchRef:
    name: logging-and-metrics
  config:
    http.enabled: true
    http.port: 5066
    http.host: 0.0.0.0
    monitoring.enabled: false
    filebeat:
      autodiscover:
        providers:
        - type: kubernetes
          host: ${NODE_NAME}
          # used when hostNetwork is true
          #host: ${HOSTNAME}
          scope: node
          # Option1: with hints the configuration would be placed at pod annotations level
          hints:
            enabled: false
            default_config:
              enabled: false
          # Option2: With static templates we can configure filebeat inputs based on pods metadata
          templates:
            - condition:
                and:
                  - equals.kubernetes.labels.app_kubernetes_io/name: "ingress-nginx"
                  - equals.kubernetes.labels.app_kubernetes_io/component: "controller"
              config:
                - module: nginx
                  # access fileset is not valid for ingress-controller (it's for standard nginx)
                  access:
                    enabled: false
                  # The error fileset works partially with ingress-controller (works better with standard nginx)
                  error:
                    input:
                      type: container
                      paths:
                        - /var/log/containers/*${data.kubernetes.container.id}.log
                      stream: stderr
                      processors:
                        - add_tags:
                            tags: [nginx-processing-template]
                  # This is the "access" fileset for ingress controller
                  ingress_controller:
                    input:
                      type: container
                      paths:
                        - /var/log/containers/*${data.kubernetes.container.id}.log
                      stream: stdout
                      processors:
                        - add_tags:
                            tags: [nginx-processing-template]
    processors:
    - add_cloud_metadata: {}
    - add_host_metadata: {}
    logging.json: true
  daemonSet:
    podTemplate:
      metadata:
        labels:
          # allow metricbeat based monitoring of this beat
          mb_collection_enabled: "true"
      spec:
        serviceAccountName: filebeat
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        # dnsPolicy: ClusterFirstWithHostNet
        # hostNetwork: true # Allows to provide richer host metadata
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          #privileged: true
        containers:
        - name: filebeat
          env:
          # Needed when hostNetwork is false
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          ports:
          - containerPort: 5066
            name: monitoring
            protocol: TCP
          volumeMounts:
          - name: data
            mountPath: /usr/share/filebeat/data
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
          - name: varlog
            mountPath: /var/log
            readOnly: true
        volumes:
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: varlog
          hostPath:
            path: /var/log
        # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
        - name: data
          hostPath:
            # When filebeat runs as non-root user, this directory needs to be writable by group (g+w).
            path: /var/lib/filebeat-data-ingress-controller
            type: DirectoryOrCreate
